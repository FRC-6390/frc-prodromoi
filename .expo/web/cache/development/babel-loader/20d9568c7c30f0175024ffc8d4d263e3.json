{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport mainScreen from \"./Screens/Matches/MainScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport navigatorScreen from \"./Screens/Matches/Buttons\";\nimport { Button1, Buttons, navitgatorScreen } from \"./Screens/Matches/Buttons\";\nimport FlexDirectionBasics from \"./Screens/Matches/MainScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '10',\n      padding: '20'\n    },\n    children: [_jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Matches\"\n      })\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('Team');\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Results\"\n      })\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: navitgatorScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Team\",\n        component: FlexDirectionBasics\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#33BEFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    paddingVertical: 30,\n    paddingHorizontal: 50,\n    margin: 4,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'red'\n  },\n  text: {\n    fontSize: 22,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 1.5,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","mainScreen","NavigationContainer","createNativeStackNavigator","navigatorScreen","Button1","Buttons","navitgatorScreen","FlexDirectionBasics","Stack","HomeScreen","navigation","flex","flexDirection","alignItems","justifyContent","margin","padding","styles","button","navigate","text","App","StyleSheet","create","container","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","elevation","fontSize","lineHeight","fontWeight","letterSpacing","color"],"sources":["C:/Users/Lance/OneDrive/Documents/GitHub/frc-prodromoi/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState} from 'react';\r\nimport { StyleSheet, Text, Button, Alert,  View, Pressable } from 'react-native';\r\nimport mainScreen from './Screens/Matches/MainScreen';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport navigatorScreen from './Screens/Matches/Buttons';\r\n//import {Button1} from './Screens/Matches/Buttons';\r\nimport {Button1, Buttons, navitgatorScreen} from './Screens/Matches/Buttons';\r\nimport FlexDirectionBasics from './Screens/Matches/MainScreen';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n \r\nfunction HomeScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'column', alignItems: 'center', justifyContent: 'center', margin: '10', padding: '20'}}>\r\n     \r\n        <Pressable style={styles.button}   onPress={() => navigation.navigate('Details')}>\r\n        <Text style={styles.text}>{\"Matches\"}</Text>\r\n      </Pressable>\r\n  \r\n      <Pressable style={styles.button} onPress={() => navigation.navigate('Team')}>\r\n        <Text style={styles.text}>{\"Results\"}</Text>\r\n        </Pressable>\r\n\r\n      \r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\n/*function Teams({navigation}){\r\nreturn(\r\n  <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n  <Text>Teams Screen</Text>\r\n\r\n  \r\n       <Pressable style={styles.button} onPress={() => navigation.navigate('Team')}>\r\n        <Text style={styles.text}>{\"Results\"}</Text>\r\n        </Pressable>\r\n\r\n</View>\r\n);\r\n}*/\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n    <Stack.Navigator initialRouteName=\"Home\">\r\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      <Stack.Screen name=\"Details\" component={navitgatorScreen} />\r\n      \r\n      <Stack.Screen name=\"Team\" component={FlexDirectionBasics} />\r\n    </Stack.Navigator>\r\n  </NavigationContainer>\r\n\r\n  );\r\n\r\n  \r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#33BEFF',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    paddingVertical: 30,\r\n    paddingHorizontal: 50,\r\n    margin: 4,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'red',\r\n  },\r\n  text: {\r\n    fontSize: 22,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 1.5,\r\n    color: 'white',\r\n  },\r\n  \r\n\r\n  \r\n});\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtC,OAAOC,UAAU;AACjB,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,eAAe;AAEtB,SAAQC,OAAO,EAAEC,OAAO,EAAEC,gBAAgB;AAC1C,OAAOC,mBAAmB;AAAqC;AAAA;AAG/D,IAAMC,KAAK,GAAGN,0BAA0B,EAAE;AAE1C,SAASO,UAAU,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC9B,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE,QAAQ;MAAEC,MAAM,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAI,CAAE;IAAA,WAE1H,KAAC,SAAS;MAAC,KAAK,EAAEC,MAAM,CAACC,MAAO;MAAG,OAAO,EAAE;QAAA,OAAMR,UAAU,CAACS,QAAQ,CAAC,SAAS,CAAC;MAAA,CAAC;MAAA,UACjF,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,IAAK;QAAA,UAAE;MAAS;IAAQ,EAClC,EAEZ,KAAC,SAAS;MAAC,KAAK,EAAEH,MAAM,CAACC,MAAO;MAAC,OAAO,EAAE;QAAA,OAAMR,UAAU,CAACS,QAAQ,CAAC,MAAM,CAAC;MAAA,CAAC;MAAA,UAC1E,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,IAAK;QAAA,UAAE;MAAS;IAAQ,EAChC;EAAA,EAGT;AAEX;;AAmBA,eAAe,SAASC,GAAG,GAAG;EAC5B,OACE,KAAC,mBAAmB;IAAA,UACpB,MAAC,KAAK,CAAC,SAAS;MAAC,gBAAgB,EAAC,MAAM;MAAA,WACtC,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEZ;MAAW,EAAG,EACnD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEH;MAAiB,EAAG,EAE5D,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEC;MAAoB,EAAG;IAAA;EAC5C,EACE;AAMxB;AAGA,IAAMU,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTb,IAAI,EAAE,CAAC;IACPc,eAAe,EAAE,SAAS;IAC1BZ,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDI,MAAM,EAAE;IACNL,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBF,aAAa,EAAE,KAAK;IACpBc,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBZ,MAAM,EAAE,CAAC;IACTa,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZJ,eAAe,EAAE;EACnB,CAAC;EACDL,IAAI,EAAE;IACJU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,MAAM;IAClBC,aAAa,EAAE,GAAG;IAClBC,KAAK,EAAE;EACT;AAIF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}