{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FlexDirectionBasics = function FlexDirectionBasics() {\n  var _useState = useState('column'),\n    _useState2 = _slicedToArray(_useState, 2),\n    flexDirection = _useState2[0],\n    setflexDirection = _useState2[1];\n  return _jsxs(PreviewLayout, {\n    label: \"flexDirection\",\n    values: ['column', 'row', 'row-reverse', 'column-reverse'],\n    selectedValue: flexDirection,\n    setSelectedValue: setflexDirection,\n    children: [_jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'powderblue'\n      }]\n    }), _jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'skyblue'\n      }]\n    }), _jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'steelblue'\n      }]\n    })]\n  });\n};\nvar timepressed = 0;\nvar Button1 = function Button1() {\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timesPressed = _useState4[0],\n    setTimesPressed = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        setTimesPressed(function (current) {\n          return current + 1;\n        });\n        timepressed = timepressed + 1;\n      },\n      style: function style(_ref) {\n        var pressed = _ref.pressed;\n        return [{\n          backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'white'\n        }, styles.wrapperCustom];\n      },\n      children: function children(_ref2) {\n        var pressed = _ref2.pressed;\n        return _jsx(Text, {\n          style: styles.text,\n          children: pressed ? 'was pressed!' : 'Press Me'\n        });\n      }\n    }), _jsx(View, {\n      style: styles.logBox,\n      children: _jsxs(Text, {\n        children: [\"This is pressed \", timepressed]\n      })\n    })]\n  });\n};\nvar PreviewLayout = function PreviewLayout(_ref3) {\n  var label = _ref3.label,\n    children = _ref3.children,\n    values = _ref3.values,\n    selectedValue = _ref3.selectedValue,\n    setSelectedValue = _ref3.setSelectedValue;\n  return _jsxs(View, {\n    style: {\n      padding: 10,\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: label\n    }), _jsx(View, {\n      style: styles.row,\n      children: values.map(function (value) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelectedValue(value);\n          },\n          style: [styles.button, selectedValue === value && styles.selected],\n          children: _jsx(Text, {\n            style: [styles.buttonLabel, selectedValue === value && styles.selectedLabel],\n            children: value\n          })\n        }, value);\n      })\n    }), _jsx(View, {\n      style: [styles.container, _defineProperty({}, label, selectedValue)],\n      children: children\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: 'aliceblue'\n  },\n  box: {\n    width: 50,\n    height: 50\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: 'oldlace',\n    alignSelf: 'flex-start',\n    marginHorizontal: '1%',\n    marginBottom: 6,\n    minWidth: '48%',\n    textAlign: 'center'\n  },\n  selected: {\n    backgroundColor: 'coral',\n    borderWidth: 0\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: 'coral'\n  },\n  selectedLabel: {\n    color: 'white'\n  },\n  label: {\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 24\n  }\n});\nexport default FlexDirectionBasics;","map":{"version":3,"names":["React","useState","FlexDirectionBasics","flexDirection","setflexDirection","styles","box","backgroundColor","timepressed","Button1","timesPressed","setTimesPressed","container","current","pressed","wrapperCustom","text","logBox","PreviewLayout","label","children","values","selectedValue","setSelectedValue","padding","flex","row","map","value","button","selected","buttonLabel","selectedLabel","StyleSheet","create","marginTop","width","height","flexWrap","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","textAlign","borderWidth","fontSize","fontWeight","color"],"sources":["C:/Users/Lance/OneDrive/Documents/GitHub/frc-prodromoi/Screens/MainScreen.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport {StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\n\r\nconst FlexDirectionBasics = () => {\r\n  const [flexDirection, setflexDirection] = useState('column');\r\n\r\n  return (\r\n    <PreviewLayout\r\n      label=\"flexDirection\"\r\n      values={['column', 'row', 'row-reverse', 'column-reverse']}\r\n      selectedValue={flexDirection}\r\n      setSelectedValue={setflexDirection}>\r\n      <View style={[styles.box, {backgroundColor: 'powderblue'}]} />\r\n      <View style={[styles.box, {backgroundColor: 'skyblue'}]} />\r\n      <View style={[styles.box, {backgroundColor: 'steelblue'}]} />\r\n    </PreviewLayout>\r\n  );\r\n};\r\nvar timepressed = 0;\r\n\r\nconst Button1 = () => {\r\n  const [timesPressed, setTimesPressed] = useState(0);//Don't delete.\r\n \r\n   return (\r\n    \r\n \r\n     <View style={styles.container}>\r\n \r\n     \r\n       <Pressable\r\n         onPress={() => {\r\n           setTimesPressed(current => current + 1);//Don't delete. The counting system stops working if this line isn't here\r\n           timepressed=timepressed + 1;\r\n         }}\r\n         style={({pressed}) => [\r\n           {\r\n             backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'white',\r\n           },\r\n           styles.wrapperCustom,\r\n         ]}>\r\n         {({pressed}) => (\r\n           <Text style={styles.text}>{pressed ? 'was pressed!' : 'Press Me'}</Text>\r\n         )}\r\n       </Pressable>\r\n       <View style={styles.logBox}>\r\n         <Text>This is pressed {timepressed}</Text>\r\n       </View>\r\n     </View>\r\n   );\r\n };\r\n \r\n \r\n\r\nconst PreviewLayout = ({\r\n  label,\r\n  children,\r\n  values,\r\n  selectedValue,\r\n  setSelectedValue,\r\n}) => (\r\n  <View style={{padding: 10, flex: 1}}>\r\n    <Text style={styles.label}>{label}</Text>\r\n    <View style={styles.row}>\r\n      {values.map(value => (\r\n        <TouchableOpacity\r\n          key={value}\r\n          onPress={() => setSelectedValue(value)}\r\n          style={[styles.button, selectedValue === value && styles.selected]}>\r\n          <Text\r\n            style={[\r\n              styles.buttonLabel,\r\n              selectedValue === value && styles.selectedLabel,\r\n            ]}>\r\n            {value}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n    <View style={[styles.container, {[label]: selectedValue}]}>{children}</View>\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: 'aliceblue',\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  button: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: 'oldlace',\r\n    alignSelf: 'flex-start',\r\n    marginHorizontal: '1%',\r\n    marginBottom: 6,\r\n    minWidth: '48%',\r\n    textAlign: 'center',\r\n  },\r\n  selected: {\r\n    backgroundColor: 'coral',\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: '500',\r\n    color: 'coral',\r\n  },\r\n  selectedLabel: {\r\n    color: 'white',\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n  },\r\n});\r\n\r\nexport default FlexDirectionBasics;"],"mappings":"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"},"metadata":{},"sourceType":"module"}