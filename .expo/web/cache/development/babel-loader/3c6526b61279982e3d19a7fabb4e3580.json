{"ast":null,"code":"import React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar timepressed = 0;\nvar Button1 = function Button1() {\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        setTimesPressed(function (current) {\n          return current + 1;\n        });\n        timepressed = timepressed + 1;\n      },\n      style: function style(_ref) {\n        var pressed = _ref.pressed;\n        return [{\n          backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'white'\n        }, styles.wrapperCustom];\n      },\n      children: function children(_ref2) {\n        var pressed = _ref2.pressed;\n        return _jsx(Text, {\n          style: styles.text,\n          children: pressed ? 'was pressed!' : 'Press Me'\n        });\n      }\n    }), _jsx(View, {\n      style: styles.logBox,\n      children: _jsxs(Text, {\n        children: [\"This is pressed \", timepressed]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 16\n  },\n  wrapperCustom: {\n    borderRadius: 8,\n    padding: 6\n  },\n  logBox: {\n    padding: 20,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  }\n});\nexport default Button1;","map":{"version":3,"names":["React","timepressed","Button1","styles","container","setTimesPressed","current","pressed","backgroundColor","wrapperCustom","text","logBox","StyleSheet","create","flex","justifyContent","fontSize","borderRadius","padding","margin","borderWidth","hairlineWidth","borderColor"],"sources":["C:/Users/Lance/OneDrive/Documents/GitHub/frc-prodromoi/Typescript/Buttons.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Pressable, StyleSheet, Text, View} from 'react-native';\r\n\r\n\r\nvar timepressed = 0;\r\n\r\nconst Button1 = () => {\r\n //const [timesPressed, setTimesPressed] = useState(0);\r\n\r\n /* let textLog = '';\r\n  if (timesPressed > 1) {\r\n    textLog = timesPressed + 'x onPress';\r\n  } else if (timesPressed > 0) {\r\n    textLog = 'Numbers pressed';\r\n  }\r\n*/\r\n  return (\r\n    <View style={styles.container}>\r\n      <Pressable\r\n        onPress={() => {\r\n          setTimesPressed(current => current + 1);\r\n          timepressed=timepressed + 1;\r\n        }}\r\n        style={({pressed}) => [\r\n          {\r\n            backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'white',\r\n          },\r\n          styles.wrapperCustom,\r\n        ]}>\r\n        {({pressed}) => (\r\n          <Text style={styles.text}>{pressed ? 'was pressed!' : 'Press Me'}</Text>\r\n        )}\r\n      </Pressable>\r\n      <View style={styles.logBox}>\r\n        <Text>This is pressed {timepressed}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n/*\r\nfunction timeKeeper(T){\r\nreturn(\r\nT = T + 1\r\n);\r\n};\r\n*/\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n  },\r\n  wrapperCustom: {\r\n    borderRadius: 8,\r\n    padding: 6,\r\n  },\r\n  logBox: {\r\n    padding: 20,\r\n    margin: 10,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderColor: '#f0f0f0',\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n});\r\n\r\nexport default Button1;"],"mappings":"AAAA,OAAOA,KAAK,MAAkB,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAItC,IAAIC,WAAW,GAAG,CAAC;AAEnB,IAAMC,OAAO,GAAG,SAAVA,OAAO,GAAS;;EAUpB,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,SAAS;MACR,OAAO,EAAE,mBAAM;QACbC,eAAe,CAAC,UAAAC,OAAO;UAAA,OAAIA,OAAO,GAAG,CAAC;QAAA,EAAC;QACvCL,WAAW,GAACA,WAAW,GAAG,CAAC;MAC7B,CAAE;MACF,KAAK,EAAE;QAAA,IAAEM,OAAO,QAAPA,OAAO;QAAA,OAAM,CACpB;UACEC,eAAe,EAAED,OAAO,GAAG,kBAAkB,GAAG;QAClD,CAAC,EACDJ,MAAM,CAACM,aAAa,CACrB;MAAA,CAAC;MAAA,UACD;QAAA,IAAEF,OAAO,SAAPA,OAAO;QAAA,OACR,KAAC,IAAI;UAAC,KAAK,EAAEJ,MAAM,CAACO,IAAK;UAAA,UAAEH,OAAO,GAAG,cAAc,GAAG;QAAU,EAAQ;MAAA;IACzE,EACS,EACZ,KAAC,IAAI;MAAC,KAAK,EAAEJ,MAAM,CAACQ,MAAO;MAAA,UACzB,MAAC,IAAI;QAAA,+BAAkBV,WAAW;MAAA;IAAQ,EACrC;EAAA,EACF;AAEX,CAAC;AAQD,IAAME,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDL,IAAI,EAAE;IACJM,QAAQ,EAAE;EACZ,CAAC;EACDP,aAAa,EAAE;IACbQ,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;EACX,CAAC;EACDP,MAAM,EAAE;IACNO,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAER,UAAU,CAACS,aAAa;IACrCC,WAAW,EAAE,SAAS;IACtBd,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAeN,OAAO"},"metadata":{},"sourceType":"module"}