{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { FlexDirectionBasics } from \"./MainScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar timepressed = 0;\nvar Stack = createNativeStackNavigator();\nvar navigatorScreen = function navigatorScreen(navigation) {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '10',\n      padding: '20'\n    },\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Testing\"\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"to Teams\"\n      })\n    })]\n  });\n};\nvar Button1 = function Button1() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    timesPressed = _useState2[0],\n    setTimesPressed = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        setTimesPressed(function (current) {\n          return current + 1;\n        });\n        timepressed = timepressed + 1;\n      },\n      style: function style(_ref) {\n        var pressed = _ref.pressed;\n        return [{\n          backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'black'\n        }, styles.wrapperCustom];\n      },\n      children: function children(_ref2) {\n        var pressed = _ref2.pressed;\n        return _jsx(Text, {\n          style: styles.text,\n          children: pressed ? 'was pressed!' : 'Press Me'\n        });\n      }\n    }), _jsx(View, {\n      style: styles.logBox,\n      children: _jsxs(Text, {\n        children: [\"This is pressed \", timepressed]\n      })\n    })]\n  });\n};\n\nexport { Button1, navigatorScreen };\nexport function Buttons() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Nav\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Nav\",\n        component: navigatorScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Team\",\n        component: FlexDirectionBasics\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Button1\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#33BEFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    paddingVertical: 30,\n    paddingHorizontal: 50,\n    margin: 4,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'red'\n  },\n  text: {\n    fontSize: 22,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 1.5,\n    color: 'white'\n  },\n  wrapperCustom: {\n    borderRadius: 8,\n    padding: 6\n  },\n  logBox: {\n    padding: 20,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","FlexDirectionBasics","timepressed","Stack","navigatorScreen","navigation","flex","flexDirection","alignItems","justifyContent","margin","padding","styles","text","button","navigate","Button1","timesPressed","setTimesPressed","container","current","pressed","backgroundColor","wrapperCustom","logBox","Buttons","StyleSheet","create","paddingVertical","paddingHorizontal","borderRadius","elevation","fontSize","lineHeight","fontWeight","letterSpacing","color","borderWidth","hairlineWidth","borderColor"],"sources":["C:/Users/Lance/OneDrive/Documents/GitHub/frc-prodromoi/Screens/Matches/Buttons.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Pressable, StyleSheet, Text, View} from 'react-native';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport { ScreenStack } from 'react-native-screens';\r\nimport App from '../../App';\r\nimport { FlexDirectionBasics } from './MainScreen';\r\n\r\nvar timepressed = 0;\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst navigatorScreen = (navigation) => {\r\nreturn(\r\n\r\n  \r\n  <View style={{ flex: 1, flexDirection: 'column', alignItems: 'center', justifyContent: 'center', margin: '10', padding: '20'}}>\r\n   <Text style={styles.text}>Testing</Text>\r\n    \r\n  <Pressable style={styles.button}  onPress={() => navigation.navigate('Details')}>\r\n  <Text style={styles.text}>{\"to Teams\"}</Text>\r\n\r\n</Pressable>\r\n</View>\r\n\r\n);\r\n}\r\n\r\nconst Button1 = () => {\r\n const [timesPressed, setTimesPressed] = useState(0);//Don't delete.\r\n\r\n  return (\r\n   \r\n\r\n    <View style={styles.container}>\r\n\r\n    \r\n      <Pressable\r\n        onPress={() => {\r\n          setTimesPressed(current => current + 1);//Don't delete. The counting system stops working if this line isn't here\r\n          timepressed=timepressed + 1;\r\n        }}\r\n        style={({pressed}) => [\r\n          {\r\n            backgroundColor: pressed ? 'rgb(10, 100, 25)' : 'black',\r\n          },\r\n          styles.wrapperCustom,\r\n        ]}>\r\n        {({pressed}) => (\r\n          <Text style={styles.text}>{pressed ? 'was pressed!' : 'Press Me'}</Text>\r\n        )}\r\n      </Pressable>\r\n      <View style={styles.logBox}>\r\n        <Text>This is pressed {timepressed}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\n//export default navitgatorScreen;\r\n/*export function Buttons(){\r\n  return(\r\n    <NavigationContainer>\r\n    <Stack.Navigator initialRouteName=\"nav\">\r\n      <Stack.Screen name=\"nav\" component={navitgatorScreen} />\r\n      <Stack.Screen name=\"Details\" component={Button1} />\r\n    </Stack.Navigator>\r\n  </NavigationContainer>\r\n\r\n\r\n  );\r\n}*/\r\nexport {Button1, navigatorScreen};\r\nexport function Buttons(){\r\nreturn(\r\n  <NavigationContainer>\r\n     <Stack.Navigator initialRouteName=\"Nav\">\r\n     <Stack.Screen name=\"Nav\" component={navigatorScreen} />\r\n  <Stack.Screen name=\"Team\" component={FlexDirectionBasics} />\r\n  <Stack.Screen name=\"Details\"component={Button1}/>\r\n  </Stack.Navigator>\r\n</NavigationContainer>\r\n);\r\n}\r\n\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#33BEFF',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    button: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      flexDirection: 'row',\r\n      paddingVertical: 30,\r\n      paddingHorizontal: 50,\r\n      margin: 4,\r\n      borderRadius: 4,\r\n      elevation: 3,\r\n      backgroundColor: 'red',\r\n    },\r\n    text: {\r\n      fontSize: 22,\r\n      lineHeight: 21,\r\n      fontWeight: 'bold',\r\n      letterSpacing: 1.5,\r\n      color: 'white',\r\n    },\r\n    wrapperCustom: {\r\n      borderRadius: 8,\r\n      padding: 6,\r\n    },\r\n    logBox: {\r\n      padding: 20,\r\n      margin: 10,\r\n      borderWidth: StyleSheet.hairlineWidth,\r\n      borderColor: '#f0f0f0',\r\n      backgroundColor: '#f9f9f9',\r\n    },\r\n  \r\n  })\r\n  \r\n  \r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}